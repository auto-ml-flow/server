[tool.poetry]
name = "server"
version = "0.0.1"
description = "Server for tracking user ML actions and help to improve models"
authors = ["Mawwlle <mawwlle@yandex.ru>"]
license = "LICENSE"
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
django = "^5.0.6"
django-environ = "^0.11.2"
django-rosetta = "^0.10.0"
djangorestframework = "^3.15.1"
django-filter = "^24.2"
drf-spectacular = "^0.27.2"
djangorestframework-simplejwt = "^5.3.1"
pydantic = "^2.7.1"
psycopg2 = "^2.9.9"
psutil = "^5.9.8"
pynvml = "^11.5.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
ruff = "^0.2.2"
mypy = "^1.8.0"
isort = "^5.13.2"

[tool.poetry.group.prod]
optional = true

[tool.poetry.group.prod.dependencies]
gunicorn = "~21.2.0"

[tool.mypy]
plugins = "pydantic.mypy"
ignore_missing_imports = true
exclude = [
    'tmp/.*',
    'tests/.*',
    'venv',
    '.venv',
    '.*/migrations/.*',
]

[tool.isort]
profile = "black"
extend_skip = ["migrations"]

[tool.ruff]
line-length = 100

[tool.ruff.lint]
extend-select = [
    # pycodestyle
    "E",
    "W",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # pylint
    "PL",
    # mccabe
    "C901",
    # flake8-return
    "RET",
    # pep8-naming
    "N",
    # flake8-annotations
    "ANN",
    # flake8-async
    "ASYNC",
    # flake8-bandit
    "S",
    # flake8-blind-except
    "BLE",
    # flake8-boolean-trap
    "FBT",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-logging-format
    "G",
    # flake8-pie
    "PIE",
    # flake8-print
    "T20",
    # flake8-pytest-style
    "PT",
    # flake8-self
    "SLF",
    # flake8-type-checking
    "TCH",
    # flake8-unused-arguments
    "ARG",
    # flake8-use-pathlib
    "PTH",
    # flake8-todos
    "TD",
    # flake8-fixme
    "FIX",
    # eradicate
    "ERA",
    # perflint
    "PERF",
    # Ruff-specific rules
    "RUF",
]
ignore = ["ANN101", "ANN102", "PLR0913", "RUF002", "RUF003", "S301", "FBT001", "FBT002", "RUF012"]
allowed-confusables = [
    "у", "е", "г", "х", "а", "р", "о", "с", "б", "У", "К", "Е", "Н", "З", "Х", "В", "А", "Р", "О", "С", "М", "Т", "Ь"
]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
